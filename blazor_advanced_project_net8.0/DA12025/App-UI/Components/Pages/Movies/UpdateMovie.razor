@page "/update-movie/{movieTitle}"

@using Services.Interfaces
@using Services.Models

@inject IMovieService MovieService
@inject ISessionService SessionService
@inject NavigationManager NavigationManager

<h1>Update Movie</h1>

<EditForm Model="@movieDTO" OnValidSubmit="@(_ => OnUpdate(movieDTO))">
    <DataAnnotationsValidator/>
    <div class="form-group mb-xl-3">
        <label for="title">Títle</label>
        <input type="text" class="form-control mt-1" id="title" @bind="movieDTO.Title" disabled/>
        <ValidationMessage For="@(() => movieDTO.Title)"/>
    </div>
    <div class="form-group mb-xl-3">
        <label for="director">Director</label>
        <input type="text" class="form-control mt-1" id="director" @bind="movieDTO.Director"/>
        <ValidationMessage For="@(() => movieDTO.Director)"/>
    </div>
    <div class="form-group mb-xl-3">
        <label for="releaseDate" class="form-label">Release Date</label>
        <input type="date" id="releaseDate" name="movie-releaseDate" class="form-control" @bind="movieDTO.ReleaseDate"/>
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
    <button type="button" class="btn btn-secondary" @onclick="OnCancel">Cancel</button>
</EditForm>

@code {
    [Parameter] public string movieTitle { get; set; }
    private MovieDTO movieDTO;

    protected override void OnInitialized()
    {
        if (SessionService.GetLoggedUser() != null!)
        {
            movieDTO = MovieService.GetMovie(movieTitle);
        }
        else
        {
            NavigationManager.NavigateTo("/");
        }
    }

    private void OnUpdate(MovieDTO movie)
    {
        MovieService.UpdateMovie(movie);
        NavigationManager.NavigateTo("/movies");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/movies");
    }

}